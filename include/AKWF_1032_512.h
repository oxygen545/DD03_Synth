#ifndef AKWF_1032_512_H_
#define AKWF_1032_512_H_
 
#if ARDUINO >= 100
#include "Arduino.h"
#else
#include "WProgram.h"
#endif
#include <avr/pgmspace.h>
 
#define AKWF_1032_512_NUM_CELLS 512
#define AKWF_1032_512_SAMPLERATE 512
 
const int8_t __attribute__((section(".progmem.data"))) AKWF_1032_512_DATA [] = {6,
24, 22, 22, 23, 22, 57, 74, 71, 73, 71, 72, 71, 72, 72, 72, 72, 72, 72, 72, 72,
72, 72, 72, 72, 71, 72, 72, 71, 72, 72, 72, 72, 71, 72, 71, 72, 72, 72, 71, 71,
73, 71, 73, 70, 88, 118, 120, 120, 121, 121, 121, 121, 120, 121, 122, 120, 121,
121, 120, 120, 121, 120, 120, 120, 121, 120, 121, 121, 120, 120, 121, 120, 120,
120, 120, 121, 120, 120, 120, 121, 120, 120, 120, 120, 119, 120, 120, 120, 120,
120, 121, 120, 120, 120, 120, 120, 120, 120, 120, 119, 120, 120, 120, 119, 120,
120, 120, 119, 120, 119, 119, 120, 119, 119, 120, 120, 119, 119, 120, 120, 120,
119, 120, 120, 120, 119, 120, 120, 119, 119, 119, 119, 119, 119, 119, 119, 119,
119, 119, 120, 119, 119, 119, 119, 119, 119, 119, 120, 118, 119, 119, 120, 113,
95, 76, 69, 71, 69, 70, 69, 69, 70, 69, 70, 69, 69, 70, 70, 69, 70, 70, 69, 70,
69, 69, 69, 70, 70, 70, 70, 69, 69, 69, 70, 69, 70, 70, 70, 70, 70, 69, 70, 69,
70, 68, 74, 51, 1, -54, -82, -77, -80, -77, -79, -78, -79, -78, -78, -78, -80,
-78, -85, -104, -120, -128, -128, -128, -128, -128, -128, -128, -128, -127,
-128, -128, -128, -127, -128, -128, -128, -128, -128, -128, -128, -128, -128,
-127, -127, -128, -127, -128, -128, -127, -127, -128, -128, -128, -127, -128,
-128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -127, -127, -128,
-127, -128, -128, -128, -127, -127, -127, -128, -127, -127, -127, -128, -128,
-128, -128, -128, -127, -127, -127, -128, -128, -127, -128, -128, -127, -127,
-127, -127, -128, -127, -127, -127, -128, -128, -127, -127, -127, -127, -127,
-127, -127, -127, -127, -127, -127, -127, -127, -127, -127, -126, -127, -127,
-127, -127, -127, -127, -127, -127, -126, -127, -127, -126, -127, -127, -127,
-127, -126, -126, -127, -127, -127, -127, -127, -127, -126, -126, -126, -127,
-126, -127, -127, -126, -127, -127, -126, -127, -126, -127, -127, -127, -127,
-126, -126, -126, -127, -128, -122, -107, -91, -77, -76, -78, -77, -77, -77,
-76, -76, -77, -77, -77, -76, -77, -77, -77, -77, -77, -76, -77, -77, -77, -77,
-77, -76, -77, -77, -76, -77, -76, -76, -77, -77, -77, -77, -77, -77, -77, -77,
-77, -76, -76, -77, -77, -76, -77, -77, -76, -77, -77, -76, -76, -76, -76, -77,
-77, -76, -77, -76, -77, -77, -77, -76, -76, -76, -76, -76, -76, -76, -76, -76,
-76, -77, -76, -76, -77, -76, -76, -76, -77, -77, -76, -76, -76, -77, -77, -77,
-76, -76, -76, -76, -77, -77, -77, -76, -76, -76, -76, -75, -78, -68, -52, -37,
-26, -26, -26, -26, -27, -27, -27, -27, -26, -27, -27, -27, -27, -27, -27, -27,
-27, -27, -27, -27, -26, -27, -27, -26, -27, -26, -26, -27, -27, -26, -26, -27,
-26, -27, -27, -26, -27, -26, -27, -27, -26, -27, -27, -27, -27, -28, -22, -5,
};

#endif /* AKWF_1032_512_H_ */
